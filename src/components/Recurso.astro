---
import { getCollection, type CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const recursoPosts = await getCollection('recurso');

// Verifica si pubDate estÃ¡ presente y es una fecha vÃ¡lida
const latestRecursos = recursoPosts
  .filter((post) => post.data.pubDate instanceof Date) // Asegurar que pubDate es Date
  .sort((a, b) => new Date(b.data.pubDate!).getTime() - new Date(a.data.pubDate!).getTime())
  .slice(0, 8);

// Definir el tipo de post para evitar errores de 'any'
const getPostUrl = (post: CollectionEntry<'recurso'>) => `/recurso/${post.id}/`;
---

<section class="latest-resources m-4">
  <h2 class="text-2xl font-bold mb-4 text-center">ðŸ“š Recursos & Herramientas</h2>
  <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
    {latestRecursos.map((post) => (
      <li class="w-full">
        <a href={getPostUrl(post)} class="block bg-white border border-gray-200 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
          <img class="w-full h-56 object-cover rounded-t-lg" src={post.data.heroImage} alt={post.data.title} />
          <div class="p-4">
            <h4 class="text-lg font-semibold text-gray-900">{post.data.title}</h4>
            <p class="text-sm text-gray-500 mt-2">
              <FormattedDate date={post.data.pubDate!} />
            </p>
          </div>
        </a>
      </li>
    ))}
  </ul>
</section>
